#!/usr/bin/env node

const debug = require('debug')('app:build')
debug.color = 2 // force green color

const warn = require('debug')('app:warn')
warn.color = 1 // force red color

const parseArgs = require('minimist')

const argv = parseArgs(process.argv.slice(2), {
  alias: {
    t: 'theme',
    m: 'mode',
    d: 'debug',
    c: 'config-file',
    h: 'help'
  },
  boolean: ['h', 'd'],
  string: ['t', 'm', 'c'],
  default: {
    t: 'mat',
    m: 'spa',
    p: process.env.PORT || 8080,
    c: 'quasar.conf.js'
  }
})

if (argv.help) {
  console.log(`
    Description
      Starts the app in development mode (hot-code reloading, error
      reporting, etc)
    Usage
      $ npm run build -p <port number>
    Options
      --theme, -t         App theme (default: mat)
      --mode, -m          App mode (default: spa)
      --debug, -d         Add sourcemaps, remove minification
      --config-file, -c   Path to Quasar config file (default: quasar.config.js)
      --help, -h          Displays this message
  `)
  process.exit(0)
}

const
  chalk = require('chalk'),
  webpack = require('webpack')

const
  appPaths = require('../lib/app-paths'),
  QuasarConfig = require('../lib/quasar-config'),
  Generator = require('../lib/generator')

const
  quasarConfig = new QuasarConfig({
    filename: argv['config-file'],
    theme: argv.theme,
    mode: argv.mode,
    port: argv.port,
    prod: true,
    debug: argv.debug
  }),
  generator = new Generator(quasarConfig),
  webpackConfig = quasarConfig.getWebpackConfig(),
  buildConfig = quasarConfig.getBuildConfig(),
  mode = argv.mode.toUpperCase()

generator.build()

debug(chalk.bold(`Building ${mode} with "${argv.theme}" theme...`))
console.log()
webpack(webpackConfig, (err, stats) => {
  if (err) { throw err }

  process.stdout.write(stats.toString({
    colors: true,
    modules: false,
    children: false,
    chunks: false,
    chunkModules: false
  }) + '\n')

  if (stats.hasErrors()) {
    debug(chalk.red('Build failed with errors.\n'))
    process.exit(1)
  }

  console.log()
  debug(chalk.cyan(
    `[success] ${chalk.bold(mode)} with "${chalk.bold(argv.theme)}" theme in "${chalk.bold(buildConfig.build.distDir)}" folder.`
  ))
  console.log()

  warn('Do NOT use VueRouter\'s "history" mode if building for Cordova or Electron.')
  console.log()

  warn('Built files are meant to be served over an HTTP server.')
  warn(`Opening ${buildConfig.build.htmlFilename} over file:// won't work.`)
  console.log()

  if (buildConfig.build.debug) {
    warn(`Built for ${chalk.bold('DEBUG')} - Do NOT deploy this version to production.`)
    console.log()
  }
})
